package cn.sxwl.lvyou.common.dao;


import cn.sxwl.lvyou.common.entity.Business;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface BusinessMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @Delete({
        "delete from business",
        "where bid = #{bid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer bid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @Insert({
        "insert into business (bid, bname, ",
        "bpassword, baddress, ",
        "bemail, bcreatetime, ",
        "bbalance, bcomment, ",
        "bimg)",
        "values (#{bid,jdbcType=INTEGER}, #{bname,jdbcType=VARCHAR}, ",
        "#{bpassword,jdbcType=VARCHAR}, #{baddress,jdbcType=VARCHAR}, ",
        "#{bemail,jdbcType=VARCHAR}, #{bcreatetime,jdbcType=TIMESTAMP}, ",
        "#{bbalance,jdbcType=DECIMAL}, #{bcomment,jdbcType=VARCHAR}, ",
        "#{bimg,jdbcType=VARCHAR})"
    })
    int insert(Business record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @InsertProvider(type=BusinessSqlProvider.class, method="insertSelective")
    int insertSelective(Business record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @Select({
        "select",
        "bid, bname, bpassword, baddress, bemail, bcreatetime, bbalance, bcomment, bimg",
        "from business",
        "where bid = #{bid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="bid", property="bid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="bname", property="bname", jdbcType=JdbcType.VARCHAR),
        @Result(column="bpassword", property="bpassword", jdbcType=JdbcType.VARCHAR),
        @Result(column="baddress", property="baddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="bemail", property="bemail", jdbcType=JdbcType.VARCHAR),
        @Result(column="bcreatetime", property="bcreatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="bbalance", property="bbalance", jdbcType=JdbcType.DECIMAL),
        @Result(column="bcomment", property="bcomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="bimg", property="bimg", jdbcType=JdbcType.VARCHAR)
    })
    Business selectByPrimaryKey(Integer bid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @UpdateProvider(type=BusinessSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Business record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @Update({
        "update business",
        "set bname = #{bname,jdbcType=VARCHAR},",
          "bpassword = #{bpassword,jdbcType=VARCHAR},",
          "baddress = #{baddress,jdbcType=VARCHAR},",
          "bemail = #{bemail,jdbcType=VARCHAR},",
          "bcreatetime = #{bcreatetime,jdbcType=TIMESTAMP},",
          "bbalance = #{bbalance,jdbcType=DECIMAL},",
          "bcomment = #{bcomment,jdbcType=VARCHAR},",
          "bimg = #{bimg,jdbcType=VARCHAR}",
        "where bid = #{bid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Business record);
    @Update({
            "update business",
            "set bname = #{bname,jdbcType=VARCHAR},",
            "bpassword = #{bpassword,jdbcType=VARCHAR},",
            "baddress = #{baddress,jdbcType=VARCHAR},",
            "bemail = #{bemail,jdbcType=VARCHAR},",
            "bcreatetime = #{bcreatetime,jdbcType=TIMESTAMP},",
            "bbalance = #{bbalance,jdbcType=DECIMAL},",
            "bcomment = #{bcomment,jdbcType=VARCHAR},",
            "where bid = #{bid,jdbcType=INTEGER}"
    })
    int updateNotImg(Business record);


    @Select({
            "select",
            "bid, bname, bpassword, baddress, bemail, bcreatetime, bbalance, bcomment, bimg",
            "from business"
    })
    @Results({
            @Result(column="bid", property="bid", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="bname", property="bname", jdbcType=JdbcType.VARCHAR),
            @Result(column="bpassword", property="bpassword", jdbcType=JdbcType.VARCHAR),
            @Result(column="baddress", property="baddress", jdbcType=JdbcType.VARCHAR),
            @Result(column="bemail", property="bemail", jdbcType=JdbcType.VARCHAR),
            @Result(column="bcreatetime", property="bcreatetime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="bbalance", property="bbalance", jdbcType=JdbcType.DECIMAL),
            @Result(column="bcomment", property="bcomment", jdbcType=JdbcType.VARCHAR),
            @Result(column="bimg", property="bimg", jdbcType=JdbcType.VARCHAR)
    })
    List<Business> selectAll();

    @Select({
            "select",
            "bname",
            "from business",
            "where bid = #{bid,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="bname", property="bname", jdbcType=JdbcType.VARCHAR),
    })
    String selectBusinessName(Integer bid);


    @Select({
            "select",
            "bid, bname, baddress, bemail, bcreatetime, bbalance, bcomment, bimg",
            "from business order by bbalance desc"
    })
    @Results({
            @Result(column="bid", property="bid", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="bname", property="bname", jdbcType=JdbcType.VARCHAR),
            @Result(column="baddress", property="baddress", jdbcType=JdbcType.VARCHAR),
            @Result(column="bemail", property="bemail", jdbcType=JdbcType.VARCHAR),
            @Result(column="bcreatetime", property="bcreatetime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="bbalance", property="bbalance", jdbcType=JdbcType.DECIMAL),
            @Result(column="bcomment", property="bcomment", jdbcType=JdbcType.VARCHAR),
            @Result(column="bimg", property="bimg", jdbcType=JdbcType.VARCHAR)
    })
    List<Business> getNiceBusiness();

    @Select({
            "select",
            "bid, bname, bpassword, baddress, bemail, bcreatetime, bbalance, bcomment, bimg",
            "from business",
            "where baddress like CONCAT('%',#{keyWords,jdbcType=VARCHAR},'%')"
    })
    @Results({
            @Result(column="bid", property="bid", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="bname", property="bname", jdbcType=JdbcType.VARCHAR),
            @Result(column="bpassword", property="bpassword", jdbcType=JdbcType.VARCHAR),
            @Result(column="baddress", property="baddress", jdbcType=JdbcType.VARCHAR),
            @Result(column="bemail", property="bemail", jdbcType=JdbcType.VARCHAR),
            @Result(column="bcreatetime", property="bcreatetime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="bbalance", property="bbalance", jdbcType=JdbcType.DECIMAL),
            @Result(column="bcomment", property="bcomment", jdbcType=JdbcType.VARCHAR),
            @Result(column="bimg", property="bimg", jdbcType=JdbcType.VARCHAR)
    })
    List<Business> selectByAddress(@Param("keyWords") String keyWords);



}