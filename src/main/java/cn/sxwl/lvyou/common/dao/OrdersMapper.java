package cn.sxwl.lvyou.common.dao;

import cn.sxwl.lvyou.common.entity.Orders;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface OrdersMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @Delete({
        "delete from orders",
        "where oid = #{oid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String oid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @Insert({
        "insert into orders (oid, uid, ",
        "ocreatetime, oprice, ",
        "jiesuan)",
        "values (#{oid,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, ",
        "#{ocreatetime,jdbcType=TIMESTAMP}, #{oprice,jdbcType=DECIMAL}, ",
        "#{jiesuan,jdbcType=INTEGER})"
    })
    int insert(Orders record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @InsertProvider(type=OrdersSqlProvider.class, method="insertSelective")
    int insertSelective(Orders record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @Select({
        "select",
        "oid, uid, ocreatetime, oprice, jiesuan",
        "from orders",
        "where oid = #{oid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="oid", property="oid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
        @Result(column="ocreatetime", property="ocreatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="oprice", property="oprice", jdbcType=JdbcType.DECIMAL),
        @Result(column="jiesuan", property="jiesuan", jdbcType=JdbcType.INTEGER)
    })
    Orders selectByPrimaryKey(String oid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @UpdateProvider(type=OrdersSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Orders record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Sun Feb 10 12:45:23 GMT+08:00 2019
     */
    @Update({
        "update orders",
        "set uid = #{uid,jdbcType=INTEGER},",
          "ocreatetime = #{ocreatetime,jdbcType=TIMESTAMP},",
          "oprice = #{oprice,jdbcType=DECIMAL},",
          "jiesuan = #{jiesuan,jdbcType=INTEGER}",
        "where oid = #{oid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Orders record);



    @Select({
            "select",
            "oid, uid, ocreatetime, oprice, jiesuan",
            "from orders",
            "where uid = #{uid,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="oid", property="oid", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
            @Result(column="ocreatetime", property="ocreatetime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="oprice", property="oprice", jdbcType=JdbcType.DECIMAL),
            @Result(column="jiesuan", property="jiesuan", jdbcType=JdbcType.INTEGER)
    })
    List<Orders> selectByUid(Integer uid);
}